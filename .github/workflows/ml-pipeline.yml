name: ML Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4  # Update ke v4
    
    - name: Set up Python
      uses: actions/setup-python@v5  # Update ke v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v
    
    - name: Train model
      run: |
        python src/train.py
    
    - name: Test prediction
      run: |
        python src/predict.py
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4  # Update ke v4
      with:
        name: trained-model
        path: models/

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4  # Update ke v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Update ke v3
    
    - name: Download model artifacts
      uses: actions/download-artifact@v4  # Update ke v4
      with:
        name: trained-model
        path: models/
    
    - name: Build Docker image
      run: |
        docker build -t ml-iris-app:latest .
    
    - name: Test Docker container
      run: |
        docker run --rm ml-iris-app:latest python src/predict.py
    
    - name: Login to Docker Hub (optional)
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3  # Update ke v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub (optional)
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag ml-iris-app:latest ${{ secrets.DOCKER_USERNAME }}/ml-iris-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/ml-iris-app:latest

  model-monitoring:
    needs: [test, docker-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4  # Update ke v4
    
    - name: Set up Python
      uses: actions/setup-python@v5  # Tambahkan setup Python
      with:
        python-version: '3.9'
    
    - name: Download model artifacts
      uses: actions/download-artifact@v4  # Update ke v4
      with:
        name: trained-model
        path: models/
    
    - name: Check model performance
      run: |
        python -c "
        import json
        with open('models/metrics.json', 'r') as f:
            metrics = json.load(f)
        print(f'Model accuracy: {metrics[\"accuracy\"]}')
        if metrics['accuracy'] < 0.9:
            print('WARNING: Model accuracy below threshold!')
            exit(1)
        "